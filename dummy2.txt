
import React, { useState } from "react";

const App = () => {
  const [selectedDate, setSelectedDate] = useState("");
  const [selectedTime, setSelectedTime] = useState("");
  const [selectedSeats, setSelectedSeats] = useState([]);
  const [step, setStep] = useState(1);
  const [movieInfo] = useState({
    title: "Demon Slayer: Kimetsu no Yaiba",
    subtitle: "The Movie - Mugen Train",
    description: "Tanjiro and his companions embark on a mission aboard the Mugen Train, where over 40 people have disappeared. Little do they know, they are stepping into a demon's trap...",
    duration: "117 min",
    rating: "PG-13",
    genre: "Action, Fantasy, Adventure"
  });

  const dates = ["2023-12-15", "2023-12-16", "2023-12-17", "2023-12-18", "2023-12-19"];
  const times = ["10:00 AM", "1:30 PM", "4:15 PM", "7:00 PM", "9:45 PM"];
  
  const seats = [
    ["A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8"],
    ["B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8"],
    ["C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8"],
    ["D1", "D2", "D3", "D4", "D5", "D6", "D7", "D8"],
    ["E1", "E2", "E3", "E4", "E5", "E6", "E7", "E8"],
    ["F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8"]
  ];

  const toggleSeat = (seat) => {
    setSelectedSeats(prev => 
      prev.includes(seat) 
        ? prev.filter(s => s !== seat) 
        : [...prev, seat]
    );
  };

  const nextStep = () => {
    if (step === 1 && selectedDate && selectedTime) {
      setStep(2);
    } else if (step === 2 && selectedSeats.length > 0) {
      setStep(3);
    }
  };

  const prevStep = () => {
    setStep(prev => prev - 1);
  };

  const formatPrice = (price) => `$${price.toFixed(2)}`;

  const totalPrice = selectedSeats.length * 12.50;

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900">
      {/* Header */}
      <header className="bg-black bg-opacity-50 backdrop-blur-sm border-b border-purple-500">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <div className="w-10 h-10 bg-red-600 rounded-full flex items-center justify-center">
              <span className="text-white font-bold text-xl">D</span>
            </div>
            <h1 className="text-2xl font-bold text-white">DemonSlayer<span className="text-red-500">Tickets</span></h1>
          </div>
          <nav className="hidden md:flex space-x-6">
            <a href="#" className="text-gray-300 hover:text-white transition">Movies</a>
            <a href="#" className="text-gray-300 hover:text-white transition">Theaters</a>
            <a href="#" className="text-gray-300 hover:text-white transition">Offers</a>
            <a href="#" className="text-gray-300 hover:text-white transition">Account</a>
          </nav>
        </div>
      </header>

      {/* Hero Section */}
      {step === 1 && (
        <section className="relative py-16">
          <div className="absolute inset-0 bg-black opacity-50"></div>
          <img 
            src="https://placehold.co/1200x600/1a1a1a/ffffff?text=Demon+Slayer+Movie" 
            alt="Demon Slayer Movie" 
            className="w-full h-96 md:h-[500px] object-cover"
          />
          <div className="absolute inset-0 flex items-center justify-center">
            <div className="text-center text-white px-4">
              <h2 className="text-4xl md:text-6xl font-bold mb-4">{movieInfo.title}</h2>
              <p className="text-xl md:text-2xl mb-8">{movieInfo.subtitle}</p>
              <div className="flex flex-wrap justify-center gap-4 mb-8">
                <span className="bg-red-600 px-3 py-1 rounded-full text-sm font-semibold">{movieInfo.rating}</span>
                <span className="bg-purple-600 px-3 py-1 rounded-full text-sm font-semibold">{movieInfo.duration}</span>
                <span className="bg-blue-600 px-3 py-1 rounded-full text-sm font-semibold">{movieInfo.genre}</span>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Main Content */}
      <main className="container mx-auto px-4 py-8">
        {/* Progress Bar */}
        <div className="mb-8">
          <div className="flex justify-between mb-2">
            <span className={`font-semibold ${step >= 1 ? 'text-white' : 'text-gray-500'}`}>1. Date & Time</span>
            <span className={`font-semibold ${step >= 2 ? 'text-white' : 'text-gray-500'}`}>2. Select Seats</span>
            <span className={`font-semibold ${step >= 3 ? 'text-white' : 'text-gray-500'}`}>3. Confirmation</span>
          </div>
          <div className="w-full bg-gray-700 rounded-full h-2">
            <div 
              className="bg-gradient-to-r from-red-500 to-purple-600 h-2 rounded-full transition-all duration-500"
              style={{ width: `${(step / 3) * 100}%` }}
            ></div>
          </div>
        </div>

        {/* Step 1: Date & Time Selection */}
        {step === 1 && (
          <div className="bg-gray-800 bg-opacity-70 rounded-xl p-8 backdrop-blur-sm border border-gray-700">
            <h2 className="text-3xl font-bold text-white mb-8 text-center">Select Date & Time</h2>
            
            <div className="mb-8">
              <h3 className="text-xl font-semibold text-white mb-4">Select Date</h3>
              <div className="grid grid-cols-2 md:grid-cols-5 gap-4">
                {dates.map(date => (
                  <button
                    key={date}
                    onClick={() => setSelectedDate(date)}
                    className={`p-4 rounded-lg border-2 transition-all ${
                      selectedDate === date 
                        ? 'border-red-500 bg-red-500 bg-opacity-20 text-white' 
                        : 'border-gray-600 hover:border-gray-400 text-gray-300'
                    }`}
                  >
                    <div className="font-semibold">{new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}</div>
                    <div>{new Date(date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}</div>
                  </button>
                ))}
              </div>
            </div>

            <div className="mb-8">
              <h3 className="text-xl font-semibold text-white mb-4">Select Time</h3>
              <div className="grid grid-cols-2 md:grid-cols-5 gap-4">
                {times.map(time => (
                  <button
                    key={time}
                    onClick={() => setSelectedTime(time)}
                    disabled={!selectedDate}
                    className={`p-4 rounded-lg border-2 transition-all ${
                      !selectedDate 
                        ? 'border-gray-700 text-gray-600 cursor-not-allowed' 
                        : selectedTime === time 
                          ? 'border-red-500 bg-red-500 bg-opacity-20 text-white' 
                          : 'border-gray-600 hover:border-gray-400 text-gray-300'
                    }`}
                  >
                    {time}
                  </button>
                ))}
              </div>
            </div>

            <div className="text-center">
              <button
                onClick={nextStep}
                disabled={!selectedDate || !selectedTime}
                className={`px-8 py-3 rounded-lg font-semibold text-lg transition-all ${
                  selectedDate && selectedTime
                    ? 'bg-gradient-to-r from-red-600 to-purple-600 text-white hover:from-red-700 hover:to-purple-700 transform hover:scale-105'
                    : 'bg-gray-700 text-gray-500 cursor-not-allowed'
                }`}
              >
                Continue to Seat Selection
              </button>
            </div>
          </div>
        )}

        {/* Step 2: Seat Selection */}
        {step === 2 && (
          <div className="bg-gray-800 bg-opacity-70 rounded-xl p-8 backdrop-blur-sm border border-gray-700">
            <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
              <h2 className="text-3xl font-bold text-white mb-4 md:mb-0">Select Your Seats</h2>
              <div className="text-right">
                <p className="text-gray-300">Date: <span className="text-white font-semibold">{selectedDate}</span></p>
                <p className="text-gray-300">Time: <span className="text-white font-semibold">{selectedTime}</span></p>
              </div>
            </div>

            <div className="mb-8 p-6 bg-gray-900 rounded-lg">
              <div className="text-center mb-6">
                <div className="w-full h-12 bg-gray-700 rounded-t-lg flex items-center justify-center mb-4">
                  <span className="text-white font-semibold">SCREEN</span>
                </div>
                <div className="w-full h-2 bg-gradient-to-r from-transparent via-red-500 to-transparent mb-8"></div>
              </div>

              <div className="space-y-3">
                {seats.map((row, rowIndex) => (
                  <div key={rowIndex} className="flex items-center justify-center space-x-2">
                    <span className="text-gray-400 w-8 text-right font-semibold">{String.fromCharCode(65 + rowIndex)}</span>
                    {row.map(seat => (
                      <button
                        key={seat}
                        onClick={() => toggleSeat(seat)}
                        className={`w-12 h-12 rounded-lg transition-all transform hover:scale-110 ${
                          selectedSeats.includes(seat)
                            ? 'bg-red-600 text-white border-2 border-red-400 shadow-lg'
                            : 'bg-gray-700 text-gray-300 hover:bg-gray-600 border-2 border-gray-600'
                        }`}
                      >
                        {seat.substring(1)}
                      </button>
                    ))}
                  </div>
                ))}
              </div>

              <div className="flex justify-center mt-8 space-x-6 text-sm">
                <div className="flex items-center space-x-2">
                  <div className="w-6 h-6 bg-gray-700 border-2 border-gray-600 rounded-lg"></div>
                  <span className="text-gray-300">Available</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-6 h-6 bg-red-600 border-2 border-red-400 rounded-lg"></div>
                  <span className="text-gray-300">Selected</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-6 h-6 bg-gray-500 border-2 border-gray-400 rounded-lg"></div>
                  <span className="text-gray-300">Unavailable</span>
                </div>
              </div>
            </div>

            <div className="flex flex-col md:flex-row justify-between items-center mt-8 pt-6 border-t border-gray-700">
              <div className="mb-4 md:mb-0">
                <p className="text-gray-300">Selected Seats: <span className="text-white font-semibold">{selectedSeats.join(', ') || 'None'}</span></p>
                <p className="text-gray-300">Price per seat: <span className="text-white font-semibold">{formatPrice(12.50)}</span></p>
                <p className="text-xl font-bold text-white">Total: {formatPrice(totalPrice)}</p>
              </div>
              <div className="flex space-x-4">
                <button
                  onClick={prevStep}
                  className="px-6 py-3 bg-gray-700 text-white rounded-lg font-semibold hover:bg-gray-600 transition"
                >
                  Back
                </button>
                <button
                  onClick={nextStep}
                  disabled={selectedSeats.length === 0}
                  className={`px-6 py-3 rounded-lg font-semibold transition ${
                    selectedSeats.length > 0
                      ? 'bg-gradient-to-r from-red-600 to-purple-600 text-white hover:from-red-700 hover:to-purple-700'
                      : 'bg-gray-700 text-gray-500 cursor-not-allowed'
                  }`}
                >
                  Confirm Booking
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Step 3: Confirmation */}
        {step === 3 && (
          <div className="bg-gray-800 bg-opacity-70 rounded-xl p-8 backdrop-blur-sm border border-gray-700 text-center">
            <div className="mb-8">
              <div className="w-24 h-24 bg-gradient-to-r from-red-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <h2 className="text-4xl font-bold text-white mb-4">Booking Confirmed!</h2>
              <p className="text-xl text-gray-300 mb-8">Thank you for your purchase. Your tickets have been booked successfully.</p>
            </div>

            <div className="bg-gray-900 rounded-lg p-6 mb-8">
              <h3 className="text-2xl font-bold text-white mb-6">Booking Details</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 text-left">
                <div>
                  <p className="text-gray-400">Movie</p>
                  <p className="text-white font-semibold">{movieInfo.title}</p>
                  <p className="text-gray-300 text-sm">{movieInfo.subtitle}</p>
                </div>
                <div>
                  <p className="text-gray-400">Date & Time</p>
                  <p className="text-white font-semibold">{new Date(selectedDate).toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' })}</p>
                  <p className="text-white font-semibold">{selectedTime}</p>
                </div>
                <div>
                  <p className="text-gray-400">Seats</p>
                  <p className="text-white font-semibold">{selectedSeats.join(', ')}</p>
                </div>
                <div>
                  <p className="text-gray-400">Total Amount</p>
                  <p className="text-2xl font-bold text-green-400">{formatPrice(totalPrice)}</p>
                </div>
              </div>
            </div>

            <div className="space-y-4">
              <p className="text-gray-300">Your e-ticket has been sent to your email.</p>
              <p className="text-gray-300">Please arrive at least 30 minutes before the showtime.</p>
              <div className="mt-8">
                <button
                  onClick={() => {
                    setSelectedDate("");
                    setSelectedTime("");
                    setSelectedSeats([]);
                    setStep(1);
                  }}
                  className="px-8 py-4 bg-gradient-to-r from-red-600 to-purple-600 text-white rounded-lg font-semibold text-lg hover:from-red-700 hover:to-purple-700 transition transform hover:scale-105"
                >
                  Book Another Ticket
                </button>
              </div>
            </div>
          </div>
        )}
      </main>

      {/* Footer */}
      <footer className="bg-black bg-opacity-50 border-t border-gray-800 mt-16">
        <div className="container mx-auto px-4 py-8">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="mb-4 md:mb-0">
              <h3 className="text-white font-bold text-xl">DemonSlayerTickets</h3>
              <p className="text-gray-400 text-sm">Experience the thrill of the Demon Slayer universe</p>
            </div>
            <div className="flex space-x-6">
              <a href="#" className="text-gray-400 hover:text-white transition">Terms</a>
              <a href="#" className="text-gray-400 hover:text-white transition">Privacy</a>
              <a href="#" className="text-gray-400 hover:text-white transition">Contact</a>
              <a href="#" className="text-gray-400 hover:text-white transition">Help</a>
            </div>
          </div>
          <div className="mt-8 text-center text-gray-500 text-sm">
            &copy; {new Date().getFullYear()} DemonSlayerTickets. All rights reserved.
          </div>
        </div>
      </footer>
    </div>
  );
};

export default App;
